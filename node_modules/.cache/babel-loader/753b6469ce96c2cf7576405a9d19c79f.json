{"ast":null,"code":"import _slicedToArray from \"/Users/Brar/Documents/LineUp2Date/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Brar/Documents/LineUp2Date/src/Team.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst Div = styled.div`\nbackground-color: #D0D0D0\ndisplay: inline-block\n`; // const Playername = styled.p ``\n\nclass Team extends React.Component {\n  // this.props.team\n  // First three key value pairs are team_name, team_url,game_key\n  // After this, it is the roster of the team: QB,WR1,WR2,RB1,RB2,TE,W/R/T,\n  constructor(props) {\n    super(props);\n    console.log(\"PRINTING THE PROPS:\");\n    console.log(this.props);\n  }\n\n  constructRoster() {\n    let count = 0;\n    let theteam = [];\n\n    for (const _ref of Object.entries(this.props.data.data[2])) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      const key = _ref2[0];\n      const value = _ref2[1];\n\n      if (count < 3) {\n        //team_name, team_url, game_key\n        theteam.push(React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, value));\n      } else {\n        //roster\n        let fullname = value.fullname;\n        let selected_position = value.selected_position;\n        let headshoturl = value.headshot.headshot.url;\n        let headshotsize = value.headshot.headshot.size;\n        theteam.push(React.createElement(Div, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, fullname), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, selected_position), React.createElement(\"img\", {\n          src: headshoturl.toString(),\n          alt: fullname.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }))); // console.log(value.fullname)\n        // console.log(value.selected_position)\n        // console.log(value.headshot.headshot.url)\n        // console.log(value.headshot.headshot.size)\n      }\n\n      count = count + 1;\n    }\n\n    console.log(theteam);\n    return theteam;\n  } // createTable = () => {\n  //   let table = []\n  //\n  //   // Outer loop to create parent\n  //   for (let i = 0; i < 3; i++) {\n  //     let children = []\n  //     //Inner loop to create children\n  //     for (let j = 0; j < 5; j++) {\n  //       children.push(<td>{`Column ${j + 1}`}</td>)\n  //     }\n  //     //Create the parent and add the children\n  //     table.push(<tr>{children}</tr>)\n  //   }\n  //   return table\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.constructRoster());\n  }\n\n}\n\nexport default Team;","map":{"version":3,"sources":["/Users/Brar/Documents/LineUp2Date/src/Team.js"],"names":["React","styled","Div","div","Team","Component","constructor","props","console","log","constructRoster","count","theteam","Object","entries","data","key","value","push","fullname","selected_position","headshoturl","headshot","url","headshotsize","size","toString","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,GAAG,GAAGD,MAAM,CAACE,GAAK;;;CAAxB,C,CAIA;;AACA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AACnC;AACA;AACA;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACD;;AACDG,EAAAA,eAAe,GAAG;AAChB,QAAIC,KAAK,GAAC,CAAV;AACA,QAAIC,OAAO,GAAC,EAAZ;;AACA,uBAA6BC,MAAM,CAACC,OAAP,CAAe,KAAKP,KAAL,CAAWQ,IAAX,CAAgBA,IAAhB,CAAqB,CAArB,CAAf,CAA7B,EAAsE;AAAA;;AAAA,YAAzDC,GAAyD;AAAA,YAApDC,KAAoD;;AACpE,UAAIN,KAAK,GAAC,CAAV,EAAa;AACX;AACAC,QAAAA,OAAO,CAACM,IAAR,CAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,KAAL,CAAb;AACD,OAHD,MAIK;AACH;AACA,YAAIE,QAAQ,GAACF,KAAK,CAACE,QAAnB;AACA,YAAIC,iBAAiB,GAACH,KAAK,CAACG,iBAA5B;AACA,YAAIC,WAAW,GAACJ,KAAK,CAACK,QAAN,CAAeA,QAAf,CAAwBC,GAAxC;AACA,YAAIC,YAAY,GAACP,KAAK,CAACK,QAAN,CAAeA,QAAf,CAAwBG,IAAzC;AACAb,QAAAA,OAAO,CAACM,IAAR,CAAa,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIC,QAAJ,CAAL,EAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIC,iBAAJ,CAAtB,EAAgD;AAAK,UAAA,GAAG,EAAEC,WAAW,CAACK,QAAZ,EAAV;AAAkC,UAAA,GAAG,EAAEP,QAAQ,CAACO,QAAT,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhD,CAAb,EANG,CAOH;AACA;AACA;AACA;AAED;;AACDf,MAAAA,KAAK,GAACA,KAAK,GAAC,CAAZ;AACD;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACA,WAAOA,OAAP;AACD,GAlCkC,CAoCjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAe,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjB,eAAL,EADH,CADF;AAKD;;AA3DgC;;AA8DnC,eAAeN,IAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div `\nbackground-color: #D0D0D0\ndisplay: inline-block\n`;\n// const Playername = styled.p ``\nclass Team extends React.Component {\n// this.props.team\n// First three key value pairs are team_name, team_url,game_key\n// After this, it is the roster of the team: QB,WR1,WR2,RB1,RB2,TE,W/R/T,\nconstructor(props) {\n  super(props);\n  console.log(\"PRINTING THE PROPS:\")\n  console.log(this.props)\n}\nconstructRoster() {\n  let count=0\n  let theteam=[]\n  for (const [ key, value ] of Object.entries(this.props.data.data[2])) {\n    if (count<3) {\n      //team_name, team_url, game_key\n      theteam.push(<h3>{value}</h3>)\n    }\n    else {\n      //roster\n      let fullname=value.fullname;\n      let selected_position=value.selected_position;\n      let headshoturl=value.headshot.headshot.url;\n      let headshotsize=value.headshot.headshot.size;\n      theteam.push(<Div><p>{fullname}</p><p>{selected_position}</p><img src={headshoturl.toString()} alt={fullname.toString()} /></Div>)\n      // console.log(value.fullname)\n      // console.log(value.selected_position)\n      // console.log(value.headshot.headshot.url)\n      // console.log(value.headshot.headshot.size)\n\n    }\n    count=count+1;\n  }\n  console.log(theteam)\n  return theteam\n}\n\n  // createTable = () => {\n  //   let table = []\n  //\n  //   // Outer loop to create parent\n  //   for (let i = 0; i < 3; i++) {\n  //     let children = []\n  //     //Inner loop to create children\n  //     for (let j = 0; j < 5; j++) {\n  //       children.push(<td>{`Column ${j + 1}`}</td>)\n  //     }\n  //     //Create the parent and add the children\n  //     table.push(<tr>{children}</tr>)\n  //   }\n  //   return table\n  // }\n\n\n  render() {\n    return(\n      <div>\n        {this.constructRoster()}\n      </div>\n    )\n  }\n\n}\nexport default Team;\n"]},"metadata":{},"sourceType":"module"}